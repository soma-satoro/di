# Generated by Django 4.2.16 on 2024-10-18 05:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("objects", "0015_crisis_outcome_task"),
        ("wod20th", "0032_remove_action_target_asset_remove_action_template_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ActionTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                ("downtime_cost", models.IntegerField(default=0)),
                ("requires_target", models.BooleanField(default=False)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "asset_type",
                    models.CharField(
                        choices=[
                            ("retainer", "Retainer"),
                            ("haven", "Haven"),
                            ("territory", "Territory"),
                            ("contact", "Contact"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("value", models.IntegerField(default=0)),
                ("owner_id", models.IntegerField()),
                ("status", models.CharField(default="Active", max_length=50)),
                ("traits", models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ShapeshifterForm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("shifter_type", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                ("stat_modifiers", models.JSONField(blank=True, default=dict)),
                ("rage_cost", models.PositiveIntegerField(default=0)),
                ("difficulty", models.PositiveIntegerField(default=6)),
                ("lock_string", models.CharField(blank=True, max_length=255)),
                (
                    "form_message",
                    models.TextField(
                        blank=True,
                        help_text="Message to display when this form is assumed.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shapeshifter Form",
                "verbose_name_plural": "Shapeshifter Forms",
                "ordering": ["shifter_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="CharacterSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="character_sheet",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "character",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="character_sheet",
                        to="objects.objectdb",
                    ),
                ),
                (
                    "db_object",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="db_character_sheet",
                        to="objects.objectdb",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("character_id", models.IntegerField()),
                ("downtime_spent", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("result", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "target_asset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="targeted_by_actions",
                        to="wod20th.asset",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wod20th.actiontemplate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("text", models.TextField()),
                ("category", models.CharField(default="General", max_length=100)),
                ("is_public", models.BooleanField(default=False)),
                ("is_approved", models.BooleanField(default=False)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "character",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="objects.objectdb",
                    ),
                ),
            ],
            options={
                "unique_together": {("character", "name")},
            },
        ),
    ]
